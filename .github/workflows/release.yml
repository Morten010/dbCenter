name: Build and Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # Clean up node_modules and package-lock.json
      - name: Clean install dependencies
        run: |
          Remove-Item -Recurse -Force node_modules
          Remove-Item -Force package-lock.json
        shell: pwsh

      # Install dependencies
      - name: Install dependencies
        run: npm install
        shell: pwsh

      # Rebuild native modules
      - name: Rebuild native modules
        run: npm rebuild
        shell: pwsh

      - name: Build the project
        run: npm run build
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Package and Publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --win --publish always
        shell: pwsh

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # Clean up node_modules and package-lock.json
      - name: Clean install dependencies
        run: |
          rm -rf node_modules
          rm -f package-lock.json
        shell: bash

      # Install dependencies
      - name: Install dependencies
        run: npm install
        shell: bash

      # Rebuild native modules
      - name: Rebuild native modules
        run: npm rebuild
        shell: bash

      - name: Build the project
        run: npm run build
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Package and Publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --mac --publish always
        shell: bash

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create a release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
